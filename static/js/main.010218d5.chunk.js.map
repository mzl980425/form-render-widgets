{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["createEditorState","BraftEditor","name","onChange","value","useState","editor","set","onSave","style","border","contentStyle","minHeight","height","maxHeight","htmlContent","onBlur","Demo","SCHEMA","formData","setData","valid","setValid","padding","onValidate","widgets","RichTextEditor","onClick","console","log","length","alert","toString","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"unBAIQA,EAAsBC,IAAtBD,kB,EAEW,SAAC,GAAuC,IAArCE,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAqB,G,2HAAA,gCACnCC,oBAAS,kBAAML,EAAN,OAAxBM,EADkD,KAC1CC,EAD0C,KASnDC,EAAS,aAQf,OACE,yBAAKC,MAAO,CAAEC,OAAQ,8BACpB,uBACEC,aAAc,CAAEC,UAAF,IAAkBC,OAAlB,OAAkCC,UAAW,KAC3DV,MAFF,EAGED,SAnBe,SAACG,GACpBC,KACA,IAAMQ,EAAcT,EAApB,SACAH,EAASD,EAATC,IAiBIK,OAJF,EAKEQ,OAAQR,MCzBD,SAASS,IAAQ,MAAD,EACDZ,mBAASa,EAAOC,UAAY,IAD3B,mBACtBA,EADsB,KACZC,EADY,OAEHf,mBAAS,IAFN,mBAEtBgB,EAFsB,KAEfC,EAFe,KAa7B,OACE,yBAAKb,MAAO,CAAEc,QAAS,KACrB,kBAAC,IAAD,iBACML,EADN,CAEEC,SAAUA,EACVhB,SAAUiB,EACVI,WAAYF,EACZG,QAAS,CACPnB,OAAQoB,MAGZ,4BAAQC,QApBK,KACfC,QAAQC,IAAIV,GACRE,EAAMS,OAAS,EACjBC,MAAM,mDAAD,OAAYV,EAAMW,aAEvBD,MAAME,KAAKC,UAAUf,EAAU,KAAM,MAerC,iBCvBNgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.010218d5.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\n\nconst { createEditorState } = BraftEditor\n\nconst EditorDemo = ({ name, onChange, value, ...rest }) => {\n  const [editor, set] = useState(() => createEditorState(value))\n\n  const handleChange = (editor) => {\n    set(editor)\n    const htmlContent = editor.toHTML()\n    onChange(name, htmlContent)\n  }\n\n  const onSave = () => {\n    // Pressing ctrl + s when the editor has focus will execute this method\n    // Before the editor content is submitted to the server, you can directly call editorState.toHTML () to get the HTML content\n    // const htmlContent = editor.toHTML()\n    // console.log(htmlContent)\n    // onChange(name, htmlContent)\n  }\n\n  return (\n    <div style={{ border: '1px solid rgba(0,0,0,0.2)' }}>\n      <BraftEditor\n        contentStyle={{ minHeight: 100, height: 'auto', maxHeight: 500 }}\n        value={editor}\n        onChange={handleChange}\n        onSave={onSave}\n        onBlur={onSave}\n      />\n    </div>\n  )\n}\n\nexport default EditorDemo\n","import React, { useState } from 'react'\nimport FormRender from 'form-render/lib/antd'\nimport SCHEMA from './schema.json'\nimport RichTextEditor from 'form-render-widgets'\n\nexport default function Demo() {\n  const [formData, setData] = useState(SCHEMA.formData || {})\n  const [valid, setValid] = useState([])\n\n  const onSubmit = () => {\n    console.log(formData)\n    if (valid.length > 0) {\n      alert(`校验未通过字段：${valid.toString()}`)\n    } else {\n      alert(JSON.stringify(formData, null, 2))\n    }\n  }\n\n  return (\n    <div style={{ padding: 60 }}>\n      <FormRender\n        {...SCHEMA}\n        formData={formData}\n        onChange={setData}\n        onValidate={setValid}\n        widgets={{\n          editor: RichTextEditor\n        }}\n      />\n      <button onClick={onSubmit}>提交</button>\n    </div>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}