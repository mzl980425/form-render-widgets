{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["onChange","value","name","options","rest","editor","useRef","style","width","ref","config","tabIndex","onBlur","Demo","useState","SCHEMA","formData","setData","valid","setValid","padding","onValidate","widgets","RichTextEditor","onClick","console","log","length","alert","toString","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"+xBAGA,I,EAAuB,SAAC,GAAgD,IAA9CA,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAAYC,E,oIAAW,0CAChEC,EAASC,iBAAf,MAQA,OACE,yBAAKC,MAAO,CAAEC,MAAO,SACnB,yBACEC,IADF,EAEER,MAFF,EAGES,OAHF,EAIEC,SAJF,EAKEC,OAbe,SAACX,GACpBD,EAASE,EAATF,IAaIA,SAVe,SAACC,MAEtB,MCPa,SAASY,IAAQ,MAAD,EACDC,mBAASC,EAAOC,UAAY,IAD3B,mBACtBA,EADsB,KACZC,EADY,OAEHH,mBAAS,IAFN,mBAEtBI,EAFsB,KAEfC,EAFe,KAa7B,OACE,yBAAKZ,MAAO,CAAEa,QAAS,KACrB,kBAAC,IAAD,iBACML,EADN,CAEEC,SAAUA,EACVhB,SAAUiB,EACVI,WAAYF,EACZG,QAAS,CACPjB,OAAQkB,MAGZ,4BAAQC,QApBK,KACfC,QAAQC,IAAIV,GACRE,EAAMS,OAAS,EACjBC,MAAM,mDAAD,OAAYV,EAAMW,aAEvBD,MAAME,KAAKC,UAAUf,EAAU,KAAM,MAerC,iBCvBNgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.440dd132.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport JoditEditor from 'jodit-react'\n\nconst RichTextEditor = ({ onChange, value, name, options, ...rest }) => {\n  const editor = useRef(null)\n\n  const handleSubmit = (value) => {\n    onChange(name, value)\n  }\n\n  const handleChange = (value) => {}\n\n  return (\n    <div style={{ width: '100%' }}>\n      <JoditEditor\n        ref={editor}\n        value={value}\n        config={options}\n        tabIndex={1} // tabIndex of textarea\n        onBlur={handleSubmit}\n        onChange={handleChange}\n        {...rest}\n      />\n    </div>\n  )\n}\n\nexport default RichTextEditor\n","import React, { useState } from 'react'\nimport FormRender from 'form-render/lib/antd'\nimport SCHEMA from './schema.json'\nimport RichTextEditor from 'form-render-widgets'\n\nexport default function Demo() {\n  const [formData, setData] = useState(SCHEMA.formData || {})\n  const [valid, setValid] = useState([])\n\n  const onSubmit = () => {\n    console.log(formData)\n    if (valid.length > 0) {\n      alert(`校验未通过字段：${valid.toString()}`)\n    } else {\n      alert(JSON.stringify(formData, null, 2))\n    }\n  }\n\n  return (\n    <div style={{ padding: 60 }}>\n      <FormRender\n        {...SCHEMA}\n        formData={formData}\n        onChange={setData}\n        onValidate={setValid}\n        widgets={{\n          editor: RichTextEditor\n        }}\n      />\n      <button onClick={onSubmit}>提交</button>\n    </div>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}